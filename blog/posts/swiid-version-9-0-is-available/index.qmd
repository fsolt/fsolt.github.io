---
title: SWIID Version 9.0 is available!
author: Frederick Solt
date: '2020-10-21'
slug: swiid-version-9_0
categories:
  - update
  - r
  - swiid
description: "Hi everyone! Version 9.0 of the SWIID is now available! This new release adds to its source data 947 new Ginis since version 8.3..."
---

```{r version_comparison, echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(rio)

latest <- "swiid9_0.rda"
previous <- "swiid8_3.rda"

latest_summary <- rio::import(file.path("~/Documents/projects/swiid/data", latest), which = "swiid_summary")
previous_summary <- read_csv("https://raw.githubusercontent.com/fsolt/swiid/0a9b7cb0cee71497669318a9cb98f5cd5ae588ca/data/swiid_summary.csv", col_types = "cddddddddd")

n_new_cy <- anti_join(latest_summary, previous_summary, by = c("country", "year")) %>% nrow()

latest_source <- read_csv("https://raw.githubusercontent.com/fsolt/swiid/d4ac5a256c3148a4a56bcc2307c91885bad13e3e/data/swiid_source.csv", col_types = "cdddcclcccc")
previous_source <- read_csv("https://raw.githubusercontent.com/fsolt/swiid/0a9b7cb0cee71497669318a9cb98f5cd5ae588ca/data/swiid_source.csv", col_types = "cdddcclcccc")

n_new_ginis <- nrow(latest_source) - nrow(previous_source)

this_version <- latest %>% str_extract_all("\\d") %>% first() %>% paste0(collapse = ".")
last_version <- previous %>% str_extract_all("\\d") %>% first() %>% paste0(collapse = ".")
```

Version `r this_version` of the SWIID is [now available](/swiid/swiid_downloads/)!  This new release:

- adds to [its source data](https://github.com/fsolt/swiid/blob/master/data/swiid_source.csv) `r n_new_ginis` new Ginis since version `r last_version`, including newly available LIS data on [Greece, Lithuania, Russia, South Africa, the United States,](https://www.lisdatacenter.org/news-and-events/2020-summer-data-release/) [Ireland, Panama, and Switzerland](https://www.lisdatacenter.org/news-and-events/2020-autumn-data-splash/); and

- includes estimates of market and disposable income inequality for `r n_new_cy` more country-years than version `r last_version`;

- and, justifying the whole-number revision, it incorporates the [LIS' new guidance on topcoding](http://www.lisdatacenter.org/wps/techwps/9.pdf) (and so minimizes the extent to which income inequality is underestimated).  Yay!

```{r plot, echo=FALSE, message=FALSE, warning=FALSE}
brics <- latest_summary %>% 
  filter(country=="Brazil" | country=="Russia" | 
                 country=="India" | country=="China")

ggplot(data=brics, aes(x=year, y=gini_disp, colour=country)) +
  geom_line() +
  theme_bw() +
  theme(legend.position="none") +    
  coord_cartesian(xlim = c(1970, 2020), ylim = c(20, 60)) +
  labs(x = "Year", y = "SWIID Gini Index, Disposable Income") +
  geom_ribbon(aes(ymin = gini_disp-1.96*gini_disp_se, ymax = gini_disp+1.96*gini_disp_se, 
                  fill=country, linetype=NA), alpha = .25) +
    geom_text(aes(1974.5, 56,label = "Brazil", colour="Brazil"), size=4.5) +
    geom_text(aes(1998, 48,label = "India", colour="India"), size=4.5) +
 	geom_text(aes(1993, 24,label = "Russia", colour="Russia"), size=4.5) +
	geom_text(aes(1980, 32,label = "China", colour="China"), size=4.5) +
  annotate("text", x = 2015, y = 21, size = 4, color="gray40", label="SWIID Version 9.0")
```

```{r highest, echo=FALSE, message=FALSE, warning=FALSE}
swiid_last <- latest_summary %>%
  group_by(country) %>%
  filter(year == max(year)) %>%
  filter(year>=2010) %>%
  arrange(desc(gini_disp)) %>% 
  ungroup() %>% 
  mutate(highest = gini_disp == max(gini_disp),
         highest_se = if_else(highest, gini_disp_se, NA_real_),
         highest_se = if_else(is.na(highest_se), mean(highest_se, na.rm=TRUE), highest_se),
         diff_highest = max(gini_disp) - gini_disp,
         diff_highest_se = (gini_disp_se^2 + highest_se^2)^.5,
         indistinguishable = abs(diff_highest) < 2*diff_highest_se,
         clr = if_else(highest, "red", if_else(indistinguishable, "gray50", "black")),
         country = paste0(country, " (", year, ")"),
         country = forcats::fct_reorder(country, -gini_disp)) %>% 
  slice_head(n = 50)

highest_country_lab <- as.character(swiid_last %>% 
                                  filter(highest) %>% 
                                  pull(country) %>% 
                                  str_replace(" \\(.*\\)", "'s inequality is not distinguishable\n from that of the countries \n in gray due to uncertainty"))

ggplot(swiid_last) +
  geom_pointrange(aes(x = forcats::fct_reorder(country, -gini_disp), 
                      y = gini_disp, 
                      ymin = gini_disp - 2*gini_disp_se, 
                      ymax = gini_disp + 2*gini_disp_se, 
                      colour = clr)) +
  theme_bw() + theme(legend.position="none") + 
  scale_colour_manual(values=c("black", "gray50", "red")) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size=7, colour = swiid_last$clr)) + 
  labs(x = NULL, y = "Gini Index, Disposable Income, Most Recent Available Year") +
  ggtitle("Where is Income Inequality Highest?") +
  annotate("text", x = 13, y = 68, size=4, color="gray40", label=highest_country_lab) +
  annotate("text", x = 44, y = 31, size=4, color="gray40", label="SWIID Version 9.0")

```

For more details, you can check out the all the R and Stan code used to generate the estimates [in the SWIID GitHub repository](https://github.com/fsolt/swiid).  As always, I encourage users of the SWIID to [email me](mailto:frederick-solt@uiowa.edu) with their comments, questions, and suggestions.